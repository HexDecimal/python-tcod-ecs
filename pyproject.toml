[build-system]
requires = ["flit_scm"]
build-backend = "flit_scm:buildapi"

[project]
name = "tcod-ecs"
authors = [{ name = "Kyle Benesch", email = "4b796c65+github@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dynamic = ["version", "description"]
requires-python = ">=3.8"
dependencies = [
    "attrs >=23.1.0",
    "cattrs >=23.1.2",
    "sentinel-value >=1.0.0",
    "typing-extensions >=4.4.0",
]

[tool.setuptools_scm]
write_to = "tcod/ecs/_version.py"

[project.optional-dependencies]
test = [
    "attrs >=22.2.0",
    "pytest >=7.2.0",
    "pytest-cov >=4.0.0",
    "pytest-benchmark >=4.0.0",
    "mypy >=1.1.1",
]

[tool.flit.module]
name = "tcod.ecs"

[project.urls]
Home = "https://github.com/HexDecimal"
Changelog = "https://github.com/HexDecimal/python-tcod-ecs/blob/main/CHANGELOG.md"
Documentation = "https://python-tcod-ecs.readthedocs.io"
Source = "https://github.com/HexDecimal/python-tcod-ecs"

[tool.mypy] # https://mypy.readthedocs.io/en/stable/config_file.html
files = "."
exclude = ['^build/', '^\.']
explicit_package_bases = true
python_version = "3.10"            # Type check Python version with EllipsisType
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
required_plugins = ["pytest-cov>=4.0.0", "pytest-benchmark>=4.0.0"]
addopts = "--doctest-modules --cov=tcod --cov-report=term-missing --doctest-glob=*.md --benchmark-disable"
testpaths = ["."]

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html
exclude_lines = ['^\s*\.\.\.', "if TYPE_CHECKING:", "# pragma: no cover"]

[tool.ruff]
line-length = 120

[tool.ruff.lint] # https://docs.astral.sh/ruff/rules/
select = ["ALL"]
ignore = [
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
    "COM",    # flake8-commas, handled by formatter
    "E501",   # line-too-long
    "S101",   # assert
    "SLF001", # private-member-access
    "T10",    # flake8-debugger
    "T20",    # flake8-print
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google" # Use Google-style docstrings.
